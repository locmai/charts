apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "conduit.fullname" . }}
  labels:
    {{- include "conduit.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "conduit.selectorLabels" . | nindent 6 }}
{{- if .Values.persistence.enabled }}
  volumeClaimTemplates:
  - metadata:
      name: {{ include "conduit.fullname" . }}
    {{- if .Values.persistence.labels.enabled }}
      labels:
        release: {{ .Release.Name | quote }}
        chart: "{{ .Chart.Name }}"
        app: "{{ include "conduit.fullname" . }}"
        {{- range $key, $value := .Values.labels }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
    {{- end }}
    {{- with .Values.persistence.annotations  }}
      annotations:
{{ toYaml . | indent 8 }}
    {{- end }}
    spec:
{{ toYaml .Values.volumeClaimTemplate | indent 6 }}
{{- end }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "conduit.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "conduit.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.conduit_toml.port }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /_matrix/client/versions
              port: http
          readinessProbe:
            httpGet:
              path: /_matrix/client/versions
              port: http
          volumeMounts:
          - mountPath: /srv/conduit/conduit.toml
            name: conduit-data
            subPath: conduit.toml
          - mountPath: {{ quote .Values.conduit_toml.database_path }}
            name: conduit-db 
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      volumes:
        - name: conduit-data
          configMap:
            name: {{ include "conduit.fullname" . }}
            items:
            - key: conduit.toml
              path: conduit.toml
        {{- if eq .Values.persistence.enabled false }}
        - name: conduit-db
          emptyDir: {}
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
