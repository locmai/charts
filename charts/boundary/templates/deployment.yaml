apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "boundary.fullname" . }}
  labels:
    {{- include "boundary.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "boundary.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "boundary.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      initContainers:
        - name: init-database
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: /boundary/boundary.hcl
            name: boundary-config
            subPath: boundary.hcl
          args:
          - "database"
          - "init"
          - "-config"
          - "/boundary/boundary.hcl"
          env:
          - name: BOUNDARY_PG_URL
            value: "postgresql://postgres:postgres@{{ include "boundary.fullname" . }}-postgresql:5432/boundary?sslmode=disable"
          - name: HOSTNAME
            value: "boundary"
          - name: SKIP_SETCAP
            value: "true"
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          volumeMounts:
          - mountPath: /boundary/boundary.hcl
            name: boundary-config
            subPath: boundary.hcl
          args:
          - "server"
          - "-config"
          - "/boundary/boundary.hcl"
          ports:
            - name: api
              containerPort: 9200
              protocol: TCP
            - name: cluster
              containerPort: 9201
              protocol: TCP
            - name: data
              containerPort: 9202
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: 9200
          readinessProbe:
            httpGet:
              path: /
              port: 9200
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
          - name: BOUNDARY_PG_URL
            value: "postgresql://postgres:postgres@{{ include "boundary.fullname" . }}-postgresql:5432/boundary?sslmode=disable"
          - name: HOSTNAME
            value: "boundary"
          - name: SKIP_SETCAP
            value: "true"
      volumes:
        - name: boundary-config
          configMap:
            name: {{ include "boundary.fullname" . }}
            items:
            - key: boundary.hcl
              path: boundary.hcl
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
